{"ast":null,"code":"import { FoodLog } from '../models/FoodLog';\nimport { nanoid } from 'nanoid';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"primeng/api\";\nimport * as i3 from \"@angular/common/http\";\nexport class TrackingService {\n  constructor(router, messageService, http) {\n    this.router = router;\n    this.messageService = messageService;\n    this.http = http;\n    this.uid = localStorage.getItem('UID');\n    this.userFoodLog = [];\n  }\n  getFoodLog() {\n    this.userFoodLog = [];\n    this.http.get(`http://localhost:3000/tracking/foodlog/history/${this.uid}`).subscribe(response => {\n      for (var i = 0; i < response.length; i++) {\n        this.userFoodLog.push(new FoodLog(response[i].name, response[i].calories, response[i].fat, response[i].carbs, response[i].protein, response[i].created_at, response[i].id));\n      }\n    });\n  }\n  addFoodLog(foodLog) {\n    const calories = foodLog.calories;\n    const fat = foodLog.fat;\n    const carbs = foodLog.carbs;\n    const protein = foodLog.protein;\n    const uid = localStorage.getItem('UID');\n    const timeAdded = new Date();\n    const foodLogID = nanoid(5);\n    console.log(foodLogID);\n    var name = '';\n    if (foodLog.name != '') name = foodLog.name;else name = 'Quick Add';\n    this.http.post('http://localhost:3000/tracking/foodlog', {\n      calories,\n      fat,\n      carbs,\n      protein,\n      uid,\n      timeAdded,\n      name,\n      foodLogID\n    }).subscribe({\n      next: () => {\n        console.log('Food added to database');\n        this.getFoodLog();\n      }\n    });\n  }\n  deleteFoodLog(foodLogID) {\n    console.log('function called');\n    this.http.delete(`http://localhost:3000/tracking/foodlog/${foodLogID}`).subscribe({\n      next: () => {\n        console.log(\"Food log deleted.\");\n        this.getFoodLog();\n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n  }\n}\nTrackingService.ɵfac = function TrackingService_Factory(t) {\n  return new (t || TrackingService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.MessageService), i0.ɵɵinject(i3.HttpClient));\n};\nTrackingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TrackingService,\n  factory: TrackingService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["FoodLog","nanoid","TrackingService","constructor","router","messageService","http","localStorage","getItem","getFoodLog","userFoodLog","get","uid","subscribe","response","i","length","push","name","calories","fat","carbs","protein","created_at","id","addFoodLog","foodLog","timeAdded","Date","foodLogID","console","log","post","next","deleteFoodLog","delete","error","factory","providedIn"],"sourceRoot":"","sources":["/Users/jeremiahnavarro/Documents/GitHub/health-tracker-v2/root/frontend/src/app/service/tracking.service.ts"],"sourcesContent":["import { EventEmitter, Injectable, Output } from '@angular/core';\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { createUserWithEmailAndPassword, getAuth, sendEmailVerification, sendSignInLinkToEmail, UserCredential } from \"firebase/auth\";\nimport { MessageService } from 'primeng/api';\nimport { FoodLog } from '../models/FoodLog';\nimport { nanoid } from 'nanoid';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrackingService {\n    uid = localStorage.getItem('UID')\n    \n\n    userFoodLog: FoodLog[] = []\n  \n    constructor(\n    private router: Router, \n    private messageService: MessageService,\n    private http: HttpClient)  { \n\n  }\n\n  getFoodLog() {\n    this.userFoodLog = []\n    this.http.get(`http://localhost:3000/tracking/foodlog/history/${this.uid}`).subscribe((response: any) => {\n        for(var i = 0; i < response.length; i++) {\n            this.userFoodLog.push(new FoodLog(\n                response[i].name,\n                response[i].calories,\n                response[i].fat,\n                response[i].carbs,\n                response[i].protein,\n                response[i].created_at,\n                response[i].id\n            ))\n\n        }\n    })\n\n  }\n\n  addFoodLog(foodLog: FoodLog) {\n    const calories = foodLog.calories\n    const fat = foodLog.fat\n    const carbs = foodLog.carbs\n    const protein = foodLog.protein\n    const uid = localStorage.getItem('UID')\n    const timeAdded = new Date()\n    const foodLogID = nanoid(5)\n    console.log(foodLogID)\n    var name = ''\n\n    if(foodLog.name != '')\n        name = foodLog.name\n    else\n        name = 'Quick Add'\n\n\n    this.http.post('http://localhost:3000/tracking/foodlog', {calories, fat, carbs, protein, uid, timeAdded, name, foodLogID}).subscribe({\n        next: () => {\n            console.log('Food added to database')\n            this.getFoodLog()\n        }\n    }\n    )\n\n    \n  }\n\n  deleteFoodLog(foodLogID: string) {\n    console.log('function called')\n    this.http.delete(`http://localhost:3000/tracking/foodlog/${foodLogID}`).subscribe({\n      next: () => {\n    console.log(\"Food log deleted.\");\n    this.getFoodLog();\n  },\n  error: (error) => {\n    console.log(error);\n  }\n});\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}