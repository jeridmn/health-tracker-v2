{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./tracking.service\";\nexport class FoodDataService {\n  constructor(trackingService) {\n    this.trackingService = trackingService;\n  }\n  getDailyCalories(date) {\n    console.log(localStorage.getItem('foodLogs'));\n    const isoDate = date.toISOString;\n    const dailyCalories = this.trackingService.userFoodLog.filter(log => {\n      log.time == date;\n    });\n    return dailyCalories;\n  }\n}\nFoodDataService.ɵfac = function FoodDataService_Factory(t) {\n  return new (t || FoodDataService)(i0.ɵɵinject(i1.TrackingService));\n};\nFoodDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FoodDataService,\n  factory: FoodDataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAExBC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;EAEnC;EAEAC,gBAAgB,CAACC,IAAU;IACvBC,OAAO,CAACC,GAAG,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC;IAC7C,MAAMC,OAAO,GAAGL,IAAI,CAACM,WAAW;IAChC,MAAMC,aAAa,GAAG,IAAI,CAACT,eAAe,CAACU,WAAW,CAACC,MAAM,CAACP,GAAG,IAAG;MAChEA,GAAG,CAACQ,IAAI,IAAIV,IAAI;IACpB,CAAC,CAAC;IACF,OAAOO,aAAa;EACxB;;AAbSX,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAe,SAAff,eAAe;EAAAgB,YAFd;AAAM","names":["FoodDataService","constructor","trackingService","getDailyCalories","date","console","log","localStorage","getItem","isoDate","toISOString","dailyCalories","userFoodLog","filter","time","factory","providedIn"],"sourceRoot":"","sources":["/Users/jeremiahnavarro/Documents/GitHub/health-tracker-v2/root/frontend/src/app/service/food-data.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { FoodLog } from \"../models/FoodLog\";\nimport { TrackingService } from \"./tracking.service\";\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FoodDataService {\n\n    constructor(private trackingService: TrackingService) {\n\n    }\n    \n    getDailyCalories(date: Date) {\n        console.log(localStorage.getItem('foodLogs'))\n        const isoDate = date.toISOString\n        const dailyCalories = this.trackingService.userFoodLog.filter(log => {\n            log.time == date\n        })\n        return dailyCalories\n    }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}