{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { nanoid } from 'nanoid';\nimport { WeightLog } from 'src/app/models/WeightLog';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/tracking.service\";\nimport * as i2 from \"src/app/service/local-storage.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"primeng/button\";\nimport * as i5 from \"primeng/api\";\nimport * as i6 from \"@angular/flex-layout/flex\";\nimport * as i7 from \"primeng/inputtext\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"primeng/table\";\nfunction WeightTrackComponent_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Weekly weight log is empty\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WeightTrackComponent_p_table_4_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\");\n    i0.ɵɵtext(2, \"Weight\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"th\");\n    i0.ɵɵtext(4, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"th\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WeightTrackComponent_p_table_4_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\")(7, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function WeightTrackComponent_p_table_4_ng_template_2_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const rowData_r6 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.trackingService.deleteWeightLog(rowData_r6.id));\n    });\n    i0.ɵɵelement(8, \"i\", 15);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const rowData_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", rowData_r6.weight, \" lbs. \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(5, 2, rowData_r6.date, \"MMMM dd, YYYY\"), \" \");\n  }\n}\nfunction WeightTrackComponent_p_table_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p-table\", 11);\n    i0.ɵɵtemplate(1, WeightTrackComponent_p_table_4_ng_template_1_Template, 6, 0, \"ng-template\", 12);\n    i0.ɵɵtemplate(2, WeightTrackComponent_p_table_4_ng_template_2_Template, 9, 5, \"ng-template\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"value\", ctx_r2.localStorageService.getData(\"weightLogs\"))(\"scrollable\", true);\n  }\n}\nexport class WeightTrackComponent {\n  constructor(trackingService, localStorageService) {\n    this.trackingService = trackingService;\n    this.localStorageService = localStorageService;\n    this.logWeight = new FormControl('');\n    this.dateOptions = {\n      month: \"long\",\n      day: \"numeric\",\n      year: \"numeric\"\n    };\n  }\n  ngOnInit() {}\n  onAdd() {\n    const weightID = nanoid(5);\n    this.trackingService.addWeightLog(new WeightLog(+this.logWeight.value, weightID, null));\n  }\n}\nWeightTrackComponent.ɵfac = function WeightTrackComponent_Factory(t) {\n  return new (t || WeightTrackComponent)(i0.ɵɵdirectiveInject(i1.TrackingService), i0.ɵɵdirectiveInject(i2.LocalStorageService));\n};\nWeightTrackComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: WeightTrackComponent,\n  selectors: [[\"app-weight-track\"]],\n  decls: 14,\n  vars: 3,\n  consts: [[\"fxLayoutAlign\", \"space-between center\", \"fxLayout\", \"column\", 1, \"container\"], [4, \"ngIf\"], [\"fxLayout\", \"column\", \"fxLayoutGap\", \"10px\", \"fxLayoutAlign\", \"\", \"fxFlex\", \"\"], [\"weightForm\", \"\"], [\"class\", \"table\", \"scrollHeight\", \"500px\", \"fxFlex\", \"\", 3, \"value\", \"scrollable\", 4, \"ngIf\"], [1, \"p-inputgroup\"], [1, \"p-inputgroup-addon\"], [\"type\", \"number\", \"pInputText\", \"\", \"placeholder\", \"0lbs\", 3, \"formControl\"], [\"pButton\", \"\", \"type\", \"button\", 3, \"click\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"5px\"], [1, \"pi\", \"pi-pencil\"], [\"scrollHeight\", \"500px\", \"fxFlex\", \"\", 1, \"table\", 3, \"value\", \"scrollable\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [\"pButton\", \"\", 1, \"weight-log-entry-delete\", 3, \"click\"], [1, \"pi\", \"pi-trash\"]],\n  template: function WeightTrackComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, WeightTrackComponent_p_1_Template, 2, 0, \"p\", 1);\n      i0.ɵɵelementStart(2, \"form\", 2, 3);\n      i0.ɵɵtemplate(4, WeightTrackComponent_p_table_4_Template, 3, 2, \"p-table\", 4);\n      i0.ɵɵelementStart(5, \"div\", 5)(6, \"span\", 6);\n      i0.ɵɵtext(7, \"Weight\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 8);\n      i0.ɵɵlistener(\"click\", function WeightTrackComponent_Template_button_click_9_listener() {\n        return ctx.onAdd();\n      });\n      i0.ɵɵelementStart(10, \"div\", 9)(11, \"label\");\n      i0.ɵɵtext(12, \"Log Weight\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"i\", 10);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.localStorageService.getData(\"weightLogs\").length == 0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.localStorageService.getData(\"weightLogs\").length != 0);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formControl\", ctx.logWeight);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ButtonDirective, i5.PrimeTemplate, i6.DefaultLayoutDirective, i6.DefaultLayoutGapDirective, i6.DefaultLayoutAlignDirective, i6.DefaultFlexDirective, i7.InputText, i8.ɵNgNoValidate, i8.DefaultValueAccessor, i8.NumberValueAccessor, i8.NgControlStatus, i8.NgControlStatusGroup, i8.FormControlDirective, i8.NgForm, i9.Table, i3.DatePipe],\n  styles: [\".container[_ngcontent-%COMP%] {\\n    position: relative;\\n    background-color: #152045;\\n    width: 100%;\\n    height: 100%;\\n    padding: 20px;\\n}\\n\\n.p-inputgroup-addon[_ngcontent-%COMP%] {\\n    font-family: 'Montserrat';\\n}\\n\\n.submit-button[_ngcontent-%COMP%] {\\n    width: 50%;\\n    justify-content: center;\\n    font-weight: bolder;\\n    background-color: #0EB18A;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n    color: white;\\n    font-size: large;\\n    font-family: 'Montserrat';\\n    font-weight: bold;\\n}\\n\\np[_ngcontent-%COMP%] {\\n\\n    position: absolute;\\n    top: 37%;\\n    left: 12%;\\n    color: white;\\n    font-size: large;\\n    font-family: 'Montserrat';\\n    font-weight: bold;\\n\\n}\\n\\n.weight-log-entry-delete[_ngcontent-%COMP%] {\\n    background-color: #ff4242 !important;\\n    border-width: 0;\\n    \\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdHJhY2stcGFnZS93ZWlnaHQtdHJhY2svd2VpZ2h0LXRyYWNrLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7SUFDbEIseUJBQXlCO0lBQ3pCLFdBQVc7SUFDWCxZQUFZO0lBQ1osYUFBYTtBQUNqQjs7QUFFQTtJQUNJLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLFVBQVU7SUFDVix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIseUJBQXlCO0lBQ3pCLGlCQUFpQjtBQUNyQjs7QUFFQTs7SUFFSSxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLFNBQVM7SUFDVCxZQUFZO0lBQ1osZ0JBQWdCO0lBQ2hCLHlCQUF5QjtJQUN6QixpQkFBaUI7O0FBRXJCOztBQUVBO0lBQ0ksb0NBQW9DO0lBQ3BDLGVBQWU7O0FBRW5CIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMxNTIwNDU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHBhZGRpbmc6IDIwcHg7XG59XG5cbi5wLWlucHV0Z3JvdXAtYWRkb24ge1xuICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCc7XG59XG5cbi5zdWJtaXQtYnV0dG9uIHtcbiAgICB3aWR0aDogNTAlO1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzBFQjE4QTtcbn1cblxubGFiZWwge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBmb250LXNpemU6IGxhcmdlO1xuICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCc7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbnAge1xuXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRvcDogMzclO1xuICAgIGxlZnQ6IDEyJTtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC1zaXplOiBsYXJnZTtcbiAgICBmb250LWZhbWlseTogJ01vbnRzZXJyYXQnO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuXG59XG5cbi53ZWlnaHQtbG9nLWVudHJ5LWRlbGV0ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmNDI0MiAhaW1wb3J0YW50O1xuICAgIGJvcmRlci13aWR0aDogMDtcbiAgICBcbn1cblxuXG5cblxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,MAAM,QAAQ,QAAQ;AAE/B,SAASC,SAAS,QAAQ,0BAA0B;;;;;;;;;;;;;ICHhDC,yBAAiE;IAAAA,0CAA0B;IAAAA,iBAAI;;;;;IAcvFA,0BAAI;IACIA,sBAAM;IAAAA,iBAAK;IACfA,0BAAI;IAAAA,oBAAI;IAAAA,iBAAK;IACbA,qBAAS;IACbA,iBAAK;;;;;;IAGLA,0BAAI;IAEIA,YACJ;IAAAA,iBAAK;IACLA,0BAAK;IACDA,YACJ;;IAAAA,iBAAK;IACLA,0BAAI;IACgDA;MAAA;MAAA;MAAA;MAAA,OAASA,oEAA2C;IAAA,EAAC;IACjGA,wBAA2B;IAC/BA,iBAAS;;;;IARTA,eACJ;IADIA,uDACJ;IAEIA,eACJ;IADIA,uFACJ;;;;;IApBZA,mCAKO;IACHA,gGAMc;IACdA,gGAcc;IAClBA,iBAAU;;;;IA1BVA,wEAAmD;;;ADGvD,OAAM,MAAOC,oBAAoB;EAS/BC,YAAmBC,eAAgC,EAASC,mBAAwC;IAAjF,oBAAe,GAAfD,eAAe;IAA0B,wBAAmB,GAAnBC,mBAAmB;IAP/E,cAAS,GAAG,IAAIP,WAAW,CAAC,EAAE,CAAC;IAC/B,gBAAW,GAAG;MACZQ,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE;KACP;EAID;EAEAC,QAAQ,IACR;EAEAC,KAAK;IACH,MAAMC,QAAQ,GAAGZ,MAAM,CAAC,CAAC,CAAC;IAC1B,IAAI,CAACK,eAAe,CAACQ,YAAY,CAAC,IAAIZ,SAAS,CAC7C,CAAC,IAAI,CAACa,SAAS,CAACC,KAAK,EACrBH,QAAQ,EACR,IAAI,CACT,CAAC;EACA;;AAvBWT,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAAa;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCbjClB,8BAA8E;MAC1EA,iEAA+F;MAC/FA,kCAKO;MACPA,6EA4BU;MACVA,8BAA0B;MACWA,sBAAM;MAAAA,iBAAO;MAC9CA,2BAG0B;MAC9BA,iBAAM;MACNA,iCAAiD;MAAlBA;QAAA,OAASmB,WAAO;MAAA,EAAC;MAC5CnB,+BAAuC;MAC3BA,2BAAU;MAAAA,iBAAQ;MAC1BA,yBAA4B;MAChCA,iBAAM;;;MA/CNA,eAA2D;MAA3DA,gFAA2D;MAQ9DA,eAA2D;MAA3DA,gFAA2D;MAiCxDA,eAAyB;MAAzBA,2CAAyB","names":["FormControl","nanoid","WeightLog","i0","WeightTrackComponent","constructor","trackingService","localStorageService","month","day","year","ngOnInit","onAdd","weightID","addWeightLog","logWeight","value","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/jeremiahnavarro/Documents/GitHub/health-tracker-v2/root/frontend/src/app/track-page/weight-track/weight-track.component.ts","/Users/jeremiahnavarro/Documents/GitHub/health-tracker-v2/root/frontend/src/app/track-page/weight-track/weight-track.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { nanoid } from 'nanoid';\nimport { FoodLog } from 'src/app/models/FoodLog';\nimport { WeightLog } from 'src/app/models/WeightLog';\nimport { LocalStorageService } from 'src/app/service/local-storage.service';\nimport { TrackingService } from 'src/app/service/tracking.service';\n\n@Component({\n  selector: 'app-weight-track',\n  templateUrl: './weight-track.component.html',\n  styleUrls: ['./weight-track.component.css']\n})\nexport class WeightTrackComponent {\n  weightLog: WeightLog\n  logWeight = new FormControl('')\n  dateOptions = {\n    month: \"long\",\n    day: \"numeric\",\n    year: \"numeric\"\n  }\n  \n  constructor(public trackingService: TrackingService, public localStorageService: LocalStorageService) {\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  onAdd() {\n    const weightID = nanoid(5)  \n    this.trackingService.addWeightLog(new WeightLog(\n      +this.logWeight.value, \n      weightID, \n      null\n))\n  }\n\n \n}\n","<div class=\"container\" fxLayoutAlign=\"space-between center\" fxLayout=\"column\">\n    <p *ngIf=\"localStorageService.getData('weightLogs').length == 0\">Weekly weight log is empty</p>\n    <form #weightForm\n    fxLayout=\"column\" \n    fxLayoutGap=\"10px\" \n    fxLayoutAlign=\"\"\n   \n    fxFlex>\n    <p-table class=\"table\" \n    *ngIf=\"localStorageService.getData('weightLogs').length != 0\"\n    [value]=\"localStorageService.getData('weightLogs')\" \n    [scrollable]=\"true\" \n    scrollHeight=\"500px\" \n    fxFlex>\n        <ng-template pTemplate=\"header\" let-columns>\n            <tr>\n                <th>Weight</th>\n                <th>Date</th>\n                <th></th>\n            </tr>\n        </ng-template>\n        <ng-template pTemplate=\"body\" let-rowData>\n            <tr>\n                <td >\n                    {{ rowData.weight}} lbs.\n                </td>\n                <td >\n                    {{ rowData.date | date: 'MMMM dd, YYYY' }}\n                </td>\n                <td>\n                    <button pButton class=\"weight-log-entry-delete\" (click)=\"trackingService.deleteWeightLog(rowData.id)\">\n                        <i class=\"pi pi-trash\"></i>\n                    </button>\n                </td>\n            </tr>\n        </ng-template>\n    </p-table>\n    <div class=\"p-inputgroup\">\n        <span class=\"p-inputgroup-addon\">Weight</span>\n        <input \n        type=\"number\" \n        pInputText placeholder=\"0lbs\" \n        [formControl]=\"logWeight\">\n    </div>\n    <button pButton type=\"button\"  (click)=\"onAdd()\"> \n        <div fxLayout=\"row\" fxLayoutGap=\"5px\" >  \n            <label >Log Weight</label>\n            <i class=\"pi pi-pencil\"></i>\n        </div>\n    </button> \n    </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}