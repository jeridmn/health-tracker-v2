{"ast":null,"code":"import { FoodResult } from '../models/FoodResult';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FoodDbSearchService {\n  constructor(http) {\n    this.http = http;\n    this.API_KEY = 'p8Ipi0fCcazy2ZwYJI34b7OK7FmNnmt6ginFNiQW';\n  }\n  getSearchResults(searchString) {\n    this.http.get(`https://api.nal.usda.gov/fdc/v1/foods/search?api_key=${this.API_KEY}&query=${searchString}`).subscribe(response => {\n      const searchResults = [];\n      let results = response.foods;\n      console.log(response);\n      results.forEach(food => {\n        searchResults.push(new FoodResult(food.description, food.foodNutrients.find(nutrients => nutrients.nutrientId === 1008)?.value, food.foodNutrients.find(nutrients => nutrients.nutrientId === 1005)?.value, food.foodNutrients.find(nutrients => nutrients.nutrientId === 1004)?.value, food.foodNutrients.find(nutrients => nutrients.nutrientId === 1003)?.value));\n      });\n      console.log(searchResults);\n    }, error => {});\n  }\n}\nFoodDbSearchService.ɵfac = function FoodDbSearchService_Factory(t) {\n  return new (t || FoodDbSearchService)(i0.ɵɵinject(i1.HttpClient));\n};\nFoodDbSearchService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FoodDbSearchService,\n  factory: FoodDbSearchService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,UAAU,QAAQ,sBAAsB;;;AAKjD,OAAM,MAAOC,mBAAmB;EAI9BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHxB,YAAO,GAAG,0CAA0C;EAGZ;EAExCC,gBAAgB,CAACC,YAAoB;IACnC,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,wDAAwD,IAAI,CAACC,OAAO,UAAUF,YAAY,EAAE,CAAC,CAACG,SAAS,CAClHC,QAAY,IAAI;MACf,MAAMC,aAAa,GAAiB,EAAE;MACtC,IAAIC,OAAO,GAAGF,QAAQ,CAACG,KAAK;MAC5BC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;MACrBE,OAAO,CAACI,OAAO,CAAEC,IAAI,IAAG;QAEtBN,aAAa,CAACO,IAAI,CAChB,IAAIjB,UAAU,CACZgB,IAAI,CAACE,WAAW,EAChBF,IAAI,CAACG,aAAa,CAACC,IAAI,CAACC,SAAS,IAAIA,SAAS,CAACC,UAAU,KAAK,IAAI,CAAC,EAAEC,KAAK,EAC1EP,IAAI,CAACG,aAAa,CAACC,IAAI,CAACC,SAAS,IAAIA,SAAS,CAACC,UAAU,KAAK,IAAI,CAAC,EAAEC,KAAK,EAC1EP,IAAI,CAACG,aAAa,CAACC,IAAI,CAACC,SAAS,IAAIA,SAAS,CAACC,UAAU,KAAK,IAAI,CAAC,EAAEC,KAAK,EAC1EP,IAAI,CAACG,aAAa,CAACC,IAAI,CAACC,SAAS,IAAIA,SAAS,CAACC,UAAU,KAAK,IAAI,CAAC,EAAEC,KAAK,CAC3E,CACF;MACH,CAAC,CACA;MACDV,OAAO,CAACC,GAAG,CAACJ,aAAa,CAAC;IAC5B,CAAC,EACAc,KAAK,IAAI,CAEV,CAAC,CACF;EACH;;AA/BWvB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;SAAnBA,mBAAmB;EAAAwB,SAAnBxB,mBAAmB;EAAAyB,YAFlB;AAAM","names":["FoodResult","FoodDbSearchService","constructor","http","getSearchResults","searchString","get","API_KEY","subscribe","response","searchResults","results","foods","console","log","forEach","food","push","description","foodNutrients","find","nutrients","nutrientId","value","error","factory","providedIn"],"sourceRoot":"","sources":["/Users/jeremiahnavarro/Documents/GitHub/health-tracker-v2/root/frontend/src/app/service/food-db-search.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { FoodLog } from '../models/FoodLog';\nimport { FoodResult } from '../models/FoodResult';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FoodDbSearchService {\n  API_KEY = 'p8Ipi0fCcazy2ZwYJI34b7OK7FmNnmt6ginFNiQW'\n  \n\n  constructor(private http: HttpClient) { }\n\n  getSearchResults(searchString: string) {\n    this.http.get(`https://api.nal.usda.gov/fdc/v1/foods/search?api_key=${this.API_KEY}&query=${searchString}`).subscribe(\n      (response:any) => {\n        const searchResults: FoodResult[] = []\n        let results = response.foods\n        console.log(response)\n        results.forEach( food => {\n          \n          searchResults.push(\n            new FoodResult(\n              food.description,\n              food.foodNutrients.find(nutrients => nutrients.nutrientId === 1008)?.value,\n              food.foodNutrients.find(nutrients => nutrients.nutrientId === 1005)?.value,\n              food.foodNutrients.find(nutrients => nutrients.nutrientId === 1004)?.value,\n              food.foodNutrients.find(nutrients => nutrients.nutrientId === 1003)?.value\n            )\n          )\n        }\n        )\n        console.log(searchResults)\n      },\n      (error) => {\n\n      }\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}