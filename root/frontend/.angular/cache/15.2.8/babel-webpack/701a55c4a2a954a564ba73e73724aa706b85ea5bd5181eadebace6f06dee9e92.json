{"ast":null,"code":"import _asyncToGenerator from \"/Users/jeremiahnavarro/Documents/GitHub/health-tracker-v2/root/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/firebase.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"primeng/button\";\nimport * as i5 from \"@angular/flex-layout/flex\";\nimport * as i6 from \"primeng/inputtext\";\nimport * as i7 from \"@angular/forms\";\nfunction LoginPageComponent_label_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 18);\n    i0.ɵɵtext(1, \"*email is invalid\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginPageComponent_label_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 18);\n    i0.ɵɵtext(1, \"*email or password is incorrect\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class LoginPageComponent {\n  constructor(router, currentRoute, firebaseService) {\n    this.router = router;\n    this.currentRoute = currentRoute;\n    this.firebaseService = firebaseService;\n    this.signInEmail = new FormControl('');\n    this.signInPassword = new FormControl('');\n  }\n  ngOnInit() {}\n  onSignIn() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield _this.firebaseService.signIn(_this.signInEmail.value, _this.signInPassword.value);\n      if (_this.firebaseService.isLoggedIn) {\n        _this.router.navigate(['/dashboard']);\n      }\n    })();\n  }\n  goToCreateAccount() {\n    this.router.navigate(['/signup']);\n  }\n}\nLoginPageComponent.ɵfac = function LoginPageComponent_Factory(t) {\n  return new (t || LoginPageComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FirebaseService));\n};\nLoginPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginPageComponent,\n  selectors: [[\"app-login-page\"]],\n  decls: 27,\n  vars: 5,\n  consts: [[\"fxLayout\", \"row\", \"fxLayoutAlign\", \"center center\", 1, \"login-page-container\"], [\"fxLayout\", \"column\", \"fxLayoutAlign\", \"space-between\", 1, \"container\"], [\"src\", \"../../assets/images/logo-no-background.png\"], [2, \"width\", \"80%\"], [\"fxLayoutAlign\", \"center center\"], [\"fxLayout\", \"column\", \"fxLayoutGap\", \"30px\", 1, \"signin-form-container\", 3, \"submit\"], [\"signInForm\", \"\"], [\"fxLayout\", \"column\"], [\"for\", \"email\"], [\"type\", \"email\", \"pInputText\", \"\", \"placeholder\", \"Enter your email\", \"email\", \"\", 3, \"formControl\"], [\"email\", \"\"], [\"class\", \"invalid-text\", 4, \"ngIf\"], [\"for\", \"password\"], [\"type\", \"password\", \"pInputText\", \"\", \"placeholder\", \"Enter your password\", 3, \"formControl\"], [\"fxLayoutAlign\", \"center center\", \"fxLayout\", \"column\"], [\"pButton\", \"\", \"type\", \"button\", \"fxLayoutAlign\", \"center\", 3, \"disabled\", \"click\"], [\"fxLayoutAlign\", \"center end\", 1, \"create-account-link\", 3, \"click\"], [\"fxLayoutAlign\", \"center end\", 1, \"forgot-password-link\"], [1, \"invalid-text\"]],\n  template: function LoginPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵelement(2, \"img\", 2)(3, \"hr\", 3);\n      i0.ɵɵelementStart(4, \"label\", 4);\n      i0.ɵɵtext(5, \"Sign In\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"form\", 5, 6);\n      i0.ɵɵlistener(\"submit\", function LoginPageComponent_Template_form_submit_6_listener() {\n        return ctx.onSignIn();\n      });\n      i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n      i0.ɵɵtext(10, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 9, 10);\n      i0.ɵɵtemplate(13, LoginPageComponent_label_13_Template, 2, 0, \"label\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 7)(15, \"label\", 12);\n      i0.ɵɵtext(16, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 14)(19, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function LoginPageComponent_Template_button_click_19_listener() {\n        return ctx.onSignIn();\n      });\n      i0.ɵɵtext(20, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(21, LoginPageComponent_label_21_Template, 2, 0, \"label\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(22, \"hr\", 3);\n      i0.ɵɵelementStart(23, \"a\", 16);\n      i0.ɵɵlistener(\"click\", function LoginPageComponent_Template_a_click_23_listener() {\n        return ctx.goToCreateAccount();\n      });\n      i0.ɵɵtext(24, \"New to HealthTracker?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"a\", 17);\n      i0.ɵɵtext(26, \"Forgot your password?\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"formControl\", ctx.signInEmail);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.signInEmail.invalid && ctx.signInEmail.touched);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formControl\", ctx.signInPassword);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.signInEmail.pristine || ctx.signInPassword.pristine || ctx.signInEmail.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.firebaseService.invalidLogin);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ButtonDirective, i5.DefaultLayoutDirective, i5.DefaultLayoutGapDirective, i5.DefaultLayoutAlignDirective, i6.InputText, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.EmailValidator, i7.FormControlDirective, i7.NgForm],\n  styles: [\".login-page-container[_ngcontent-%COMP%] {\\n    width: 100vw;\\n    height: 100vh;\\n}\\n\\n.container[_ngcontent-%COMP%] {\\n    width: 500px;\\n    height: 60vh;\\n    padding: 20px;\\n}\\n\\nimg[_ngcontent-%COMP%] {\\n    max-width: 80%;\\n    object-fit: contain;\\n    align-self: center;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n    color: white;\\n    font-size: 25px;\\n    font-family: 'Montserrat';\\n    font-weight: bold;\\n}   \\n\\n.signin-form-container[_ngcontent-%COMP%] {\\n    margin-left: 40px;\\n    margin-right: 40px\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n    width: 100%;\\n    font-family: 'Montserrat';\\n    font-weight: 600;\\n    font-size: large;\\n\\n}\\n\\n\\n.invalid-text[_ngcontent-%COMP%] {\\n    font-size: medium;\\n    color: red;\\n    margin-top: 10px;\\n}\\n\\n.create-account-link[_ngcontent-%COMP%] {\\n    color: white;\\n    font-weight: bold;\\n    font-size: 20px;\\n    font-family: 'Montserrat';\\n\\n    \\n}\\n\\n.forgot-password-link[_ngcontent-%COMP%] {\\n    color: white;\\n    font-size: 15px;\\n    font-family: 'Montserrat';\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4tcGFnZS9sb2dpbi1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxZQUFZO0lBQ1osYUFBYTtBQUNqQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixZQUFZO0lBQ1osYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxtQkFBbUI7SUFDbkIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLGVBQWU7SUFDZix5QkFBeUI7SUFDekIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCO0FBQ0o7O0FBRUE7SUFDSSxXQUFXO0lBQ1gseUJBQXlCO0lBQ3pCLGdCQUFnQjtJQUNoQixnQkFBZ0I7O0FBRXBCOzs7QUFHQTtJQUNJLGlCQUFpQjtJQUNqQixVQUFVO0lBQ1YsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixlQUFlO0lBQ2YseUJBQXlCOzs7QUFHN0I7O0FBRUE7SUFDSSxZQUFZO0lBQ1osZUFBZTtJQUNmLHlCQUF5QjtBQUM3QiIsInNvdXJjZXNDb250ZW50IjpbIi5sb2dpbi1wYWdlLWNvbnRhaW5lciB7XG4gICAgd2lkdGg6IDEwMHZ3O1xuICAgIGhlaWdodDogMTAwdmg7XG59XG5cbi5jb250YWluZXIge1xuICAgIHdpZHRoOiA1MDBweDtcbiAgICBoZWlnaHQ6IDYwdmg7XG4gICAgcGFkZGluZzogMjBweDtcbn1cblxuaW1nIHtcbiAgICBtYXgtd2lkdGg6IDgwJTtcbiAgICBvYmplY3QtZml0OiBjb250YWluO1xuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbn1cblxubGFiZWwge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBmb250LXNpemU6IDI1cHg7XG4gICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0JztcbiAgICBmb250LXdlaWdodDogYm9sZDtcbn0gICBcblxuLnNpZ25pbi1mb3JtLWNvbnRhaW5lciB7XG4gICAgbWFyZ2luLWxlZnQ6IDQwcHg7XG4gICAgbWFyZ2luLXJpZ2h0OiA0MHB4XG59XG5cbmJ1dHRvbiB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgZm9udC1mYW1pbHk6ICdNb250c2VycmF0JztcbiAgICBmb250LXdlaWdodDogNjAwO1xuICAgIGZvbnQtc2l6ZTogbGFyZ2U7XG5cbn1cblxuXG4uaW52YWxpZC10ZXh0IHtcbiAgICBmb250LXNpemU6IG1lZGl1bTtcbiAgICBjb2xvcjogcmVkO1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG59XG5cbi5jcmVhdGUtYWNjb3VudC1saW5rIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCc7XG5cbiAgICBcbn1cblxuLmZvcmdvdC1wYXNzd29yZC1saW5rIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICAgIGZvbnQtZmFtaWx5OiAnTW9udHNlcnJhdCc7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AACA,SAASA,WAAW,QAAmB,gBAAgB;;;;;;;;;;;ICgCvCC,iCAA+E;IAAAA,iCAAiB;IAAAA,iBAAQ;;;;;IAe5GA,iCAAsE;IAAAA,+CAA+B;IAAAA,iBAAQ;;;ADrCzH,OAAM,MAAOC,kBAAkB;EAI7BC,YAAoBC,MAAc,EAAUC,YAA4B,EAC9DC,eAAgC;IADtB,WAAM,GAANF,MAAM;IAAkB,iBAAY,GAAZC,YAAY;IAC9C,oBAAe,GAAfC,eAAe;IAJzB,gBAAW,GAAG,IAAIN,WAAW,CAAC,EAAE,CAAC;IACjC,mBAAc,GAAG,IAAIA,WAAW,CAAC,EAAE,CAAC;EAKpC;EAEAO,QAAQ,IACR;EAIMC,QAAQ;IAAA;IAAA;MACZ,MAAM,KAAI,CAACF,eAAe,CAACG,MAAM,CAAC,KAAI,CAACC,WAAW,CAACC,KAAM,EAAE,KAAI,CAACC,cAAc,CAACD,KAAM,CAAC;MACtF,IAAG,KAAI,CAACL,eAAe,CAACO,UAAU,EAAE;QAClC,KAAI,CAACT,MAAM,CAACU,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;;IACrC;EACH;EAEAC,iBAAiB;IACf,IAAI,CAACX,MAAM,CAACU,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;EACnC;;AAvBWZ,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCG/BnB,8BAA+E;MAEvEA,yBAAuD;MAGvDA,gCAAqC;MAAAA,uBAAO;MAAAA,iBAAQ;MACpDA,kCAKC;MADDA;QAAA,OAAUoB,cAAU;MAAA,EAAC;MAEjBpB,8BAAuB;MACAA,sBAAK;MAAAA,iBAAQ;MAChCA,gCAIO;MACPA,0EAAwG;MAC5GA,iBAAM;MACNA,+BAAuB;MACGA,yBAAQ;MAAAA,iBAAQ;MACtCA,6BAE+B;MACnCA,iBAAM;MACNA,gCAAqD;MAIrDA;QAAA,OAASoB,cAAU;MAAA,EAAC;MAEnBpB,sBAAK;MAAAA,iBAAS;MACfA,0EAA6G;MAC7GA,iBAAM;MAIVA,yBAAuB;MAEvBA,8BAAwF;MAA9BA;QAAA,OAASoB,uBAAmB;MAAA,EAAC;MAACpB,sCAAqB;MAAAA,iBAAI;MAEjHA,8BAA2D;MAAAA,sCAAqB;MAAAA,iBAAI;;;MA3B5EA,gBAA2B;MAA3BA,6CAA2B;MAGEA,eAAgD;MAAhDA,yEAAgD;MAM7EA,eAA8B;MAA9BA,gDAA8B;MAOlCA,eAAmF;MAAnFA,6GAAmF;MAEtDA,eAAuC;MAAvCA,uDAAuC","names":["FormControl","i0","LoginPageComponent","constructor","router","currentRoute","firebaseService","ngOnInit","onSignIn","signIn","signInEmail","value","signInPassword","isLoggedIn","navigate","goToCreateAccount","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/jeremiahnavarro/Documents/GitHub/health-tracker-v2/root/frontend/src/app/login-page/login-page.component.ts","/Users/jeremiahnavarro/Documents/GitHub/health-tracker-v2/root/frontend/src/app/login-page/login-page.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FirebaseService } from '../service/firebase.service';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.css']\n})\nexport class LoginPageComponent {\n  signInEmail = new FormControl('')\n  signInPassword = new FormControl('')\n\n  constructor(private router: Router, private currentRoute: ActivatedRoute,\n     public firebaseService: FirebaseService) {\n\n  }\n\n  ngOnInit(): void {\n  }\n\n \n\n  async onSignIn() {\n    await this.firebaseService.signIn(this.signInEmail.value!, this.signInPassword.value!)\n    if(this.firebaseService.isLoggedIn) {\n      this.router.navigate(['/dashboard'])\n    }\n  }\n\n  goToCreateAccount() {\n    this.router.navigate(['/signup'])\n  }\n}\n","<!-- <div>\n    <h2>Sign up</h2>\n    <input type=\"text\" #emailSignup>\n    <input type=\"text\" #passwordSignup>\n    <button (click)=\"onSignup(emailSignup.value, passwordSignup.value)\">Sign up</button>\n</div>\n<hr>\n<div>\n    <h2>Sign In</h2>\n    <input type=\"text\" #email>\n    <input type=\"text\" #password>\n    <button (click)=\"onSignIn(email.value, password.value)\">Sign In</button>\n</div> -->\n\n<div class=\"login-page-container\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div class=\"container\" fxLayout=\"column\" fxLayoutAlign=\"space-between\">\n        <img src=\"../../assets/images/logo-no-background.png\" > \n        <hr style=\"width: 80%\">\n\n        <label fxLayoutAlign=\"center center\">Sign In</label>\n        <form #signInForm\n        class=\"signin-form-container\" \n        fxLayout=\"column\" \n        fxLayoutGap=\"30px\" \n        (submit)=\"onSignIn()\"\n        > \n            <div fxLayout=\"column\">\n                <label for=\"email\">Email</label>\n                <input type=\"email\" pInputText \n                placeholder=\"Enter your email\" \n                [formControl]=\"signInEmail\"\n                email\n                #email>\n                <label class=\"invalid-text\" *ngIf=\"signInEmail.invalid && signInEmail.touched\">*email is invalid</label>\n            </div>\n            <div fxLayout=\"column\">\n                <label for=\"password\">Password</label>\n                <input type=\"password\" pInputText \n                placeholder=\"Enter your password\" \n                [formControl]=\"signInPassword\">\n            </div>\n            <div fxLayoutAlign=\"center center\" fxLayout=\"column\"> \n            <button pButton \n            type=\"button\" \n            fxLayoutAlign=\"center\" \n            (click)=\"onSignIn()\"\n            [disabled]=\"signInEmail.pristine || signInPassword.pristine || signInEmail.invalid\"\n            >Login</button> \n            <label class=\"invalid-text\" *ngIf=\"this.firebaseService.invalidLogin\">*email or password is incorrect</label>\n            </div>\n            \n        </form>\n\n        <hr style=\"width: 80%\">\n\n        <a fxLayoutAlign=\"center end\" class=\"create-account-link\" (click)=\"goToCreateAccount()\">New to HealthTracker?</a>\n\n        <a fxLayoutAlign=\"center end\" class=\"forgot-password-link\">Forgot your password?</a>\n    </div>\n    \n\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}