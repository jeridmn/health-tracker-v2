{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { forwardRef, Component, Inject, Input, ContentChildren, EventEmitter, PLATFORM_ID, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i2 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nimport * as i3 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { TimesIcon } from 'primeng/icons/times';\nimport { ChevronRightIcon } from 'primeng/icons/chevronright';\nimport { ChevronLeftIcon } from 'primeng/icons/chevronleft';\nfunction TabPanel_div_0_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TabPanel_div_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TabPanel_div_0_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.contentTemplate);\n  }\n}\nfunction TabPanel_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵprojection(1);\n    i0.ɵɵtemplate(2, TabPanel_div_0_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", !ctx_r0.selected);\n    i0.ɵɵattribute(\"id\", ctx_r0.id)(\"aria-hidden\", !ctx_r0.selected)(\"aria-labelledby\", ctx_r0.id + \"-label\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.contentTemplate && (ctx_r0.cache ? ctx_r0.loaded : ctx_r0.selected));\n  }\n}\nconst _c0 = [\"*\"];\nconst _c1 = [\"content\"];\nconst _c2 = [\"navbar\"];\nconst _c3 = [\"prevBtn\"];\nconst _c4 = [\"nextBtn\"];\nconst _c5 = [\"inkbar\"];\nfunction TabView_button_2_ChevronLeftIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ChevronLeftIcon\");\n  }\n}\nfunction TabView_button_2_3_ng_template_0_Template(rf, ctx) {}\nfunction TabView_button_2_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TabView_button_2_3_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction TabView_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 12, 13);\n    i0.ɵɵlistener(\"click\", function TabView_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.navBackward());\n    });\n    i0.ɵɵtemplate(2, TabView_button_2_ChevronLeftIcon_2_Template, 1, 0, \"ChevronLeftIcon\", 14);\n    i0.ɵɵtemplate(3, TabView_button_2_3_Template, 1, 0, null, 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.previousIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.previousIconTemplate);\n  }\n}\nfunction TabView_ng_template_7_li_0_ng_container_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 24);\n  }\n  if (rf & 2) {\n    const tab_r12 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵproperty(\"ngClass\", tab_r12.leftIcon);\n  }\n}\nfunction TabView_ng_template_7_li_0_ng_container_2_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction TabView_ng_template_7_li_0_ng_container_2_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TabView_ng_template_7_li_0_ng_container_2_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction TabView_ng_template_7_li_0_ng_container_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 25);\n    i0.ɵɵtemplate(1, TabView_ng_template_7_li_0_ng_container_2_span_2_1_Template, 1, 0, null, 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tab_r12 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", tab_r12.leftIconTemplate);\n  }\n}\nfunction TabView_ng_template_7_li_0_ng_container_2_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 26);\n  }\n  if (rf & 2) {\n    const tab_r12 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵproperty(\"ngClass\", tab_r12.rightIcon);\n  }\n}\nfunction TabView_ng_template_7_li_0_ng_container_2_span_6_1_ng_template_0_Template(rf, ctx) {}\nfunction TabView_ng_template_7_li_0_ng_container_2_span_6_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TabView_ng_template_7_li_0_ng_container_2_span_6_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction TabView_ng_template_7_li_0_ng_container_2_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 27);\n    i0.ɵɵtemplate(1, TabView_ng_template_7_li_0_ng_container_2_span_6_1_Template, 1, 0, null, 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tab_r12 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", tab_r12.rightIconTemplate);\n  }\n}\nfunction TabView_ng_template_7_li_0_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TabView_ng_template_7_li_0_ng_container_2_span_1_Template, 1, 1, \"span\", 19);\n    i0.ɵɵtemplate(2, TabView_ng_template_7_li_0_ng_container_2_span_2_Template, 2, 1, \"span\", 20);\n    i0.ɵɵelementStart(3, \"span\", 21);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, TabView_ng_template_7_li_0_ng_container_2_span_5_Template, 1, 1, \"span\", 22);\n    i0.ɵɵtemplate(6, TabView_ng_template_7_li_0_ng_container_2_span_6_Template, 2, 1, \"span\", 23);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tab_r12 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tab_r12.leftIcon && !tab_r12.leftIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tab_r12.leftIconTemplate);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(tab_r12.header);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tab_r12.rightIcon && !tab_r12.rightIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tab_r12.rightIconTemplate);\n  }\n}\nfunction TabView_ng_template_7_li_0_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TabView_ng_template_7_li_0_ng_container_4_TimesIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"TimesIcon\", 30);\n    i0.ɵɵlistener(\"click\", function TabView_ng_template_7_li_0_ng_container_4_TimesIcon_1_Template_TimesIcon_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r35);\n      const tab_r12 = i0.ɵɵnextContext(3).$implicit;\n      const ctx_r33 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r33.close($event, tab_r12));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-tabview-close\");\n  }\n}\nfunction TabView_ng_template_7_li_0_ng_container_4_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 31);\n  }\n}\nfunction TabView_ng_template_7_li_0_ng_container_4_3_ng_template_0_Template(rf, ctx) {}\nfunction TabView_ng_template_7_li_0_ng_container_4_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TabView_ng_template_7_li_0_ng_container_4_3_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction TabView_ng_template_7_li_0_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TabView_ng_template_7_li_0_ng_container_4_TimesIcon_1_Template, 1, 1, \"TimesIcon\", 28);\n    i0.ɵɵtemplate(2, TabView_ng_template_7_li_0_ng_container_4_span_2_Template, 1, 0, \"span\", 29);\n    i0.ɵɵtemplate(3, TabView_ng_template_7_li_0_ng_container_4_3_Template, 1, 0, null, 15);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tab_r12 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r16 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !tab_r12.closeIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r16.p - ctx_r16.tabview - ctx_r16.close);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", tab_r12.closeIconTemplate);\n  }\n}\nconst _c6 = function (a0, a1) {\n  return {\n    \"p-highlight\": a0,\n    \"p-disabled\": a1\n  };\n};\nfunction TabView_ng_template_7_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 17)(1, \"a\", 18);\n    i0.ɵɵlistener(\"click\", function TabView_ng_template_7_li_0_Template_a_click_1_listener($event) {\n      i0.ɵɵrestoreView(_r40);\n      const tab_r12 = i0.ɵɵnextContext().$implicit;\n      const ctx_r38 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r38.open($event, tab_r12));\n    })(\"keydown.enter\", function TabView_ng_template_7_li_0_Template_a_keydown_enter_1_listener($event) {\n      i0.ɵɵrestoreView(_r40);\n      const tab_r12 = i0.ɵɵnextContext().$implicit;\n      const ctx_r41 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r41.open($event, tab_r12));\n    });\n    i0.ɵɵtemplate(2, TabView_ng_template_7_li_0_ng_container_2_Template, 7, 5, \"ng-container\", 14);\n    i0.ɵɵtemplate(3, TabView_ng_template_7_li_0_ng_container_3_Template, 1, 0, \"ng-container\", 15);\n    i0.ɵɵtemplate(4, TabView_ng_template_7_li_0_ng_container_4_Template, 4, 3, \"ng-container\", 14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tab_r12 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵclassMap(tab_r12.headerStyleClass);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(16, _c6, tab_r12.selected, tab_r12.disabled))(\"ngStyle\", tab_r12.headerStyle);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"pTooltip\", tab_r12.tooltip)(\"tooltipPosition\", tab_r12.tooltipPosition)(\"positionStyle\", tab_r12.tooltipPositionStyle)(\"tooltipStyleClass\", tab_r12.tooltipStyleClass);\n    i0.ɵɵattribute(\"id\", tab_r12.id + \"-label\")(\"aria-selected\", tab_r12.selected)(\"aria-controls\", tab_r12.id)(\"aria-selected\", tab_r12.selected)(\"tabindex\", tab_r12.disabled ? null : \"0\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !tab_r12.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", tab_r12.headerTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", tab_r12.closable);\n  }\n}\nfunction TabView_ng_template_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TabView_ng_template_7_li_0_Template, 5, 19, \"li\", 16);\n  }\n  if (rf & 2) {\n    const tab_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngIf\", !tab_r12.closed);\n  }\n}\nfunction TabView_button_10_ChevronRightIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ChevronRightIcon\");\n  }\n}\nfunction TabView_button_10_3_ng_template_0_Template(rf, ctx) {}\nfunction TabView_button_10_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TabView_button_10_3_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction TabView_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r49 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 32, 33);\n    i0.ɵɵlistener(\"click\", function TabView_button_10_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r49);\n      const ctx_r48 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r48.navForward());\n    });\n    i0.ɵɵtemplate(2, TabView_button_10_ChevronRightIcon_2_Template, 1, 0, \"ChevronRightIcon\", 14);\n    i0.ɵɵtemplate(3, TabView_button_10_3_Template, 1, 0, null, 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.nextIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.nextIconTemplate);\n  }\n}\nconst _c7 = function (a1) {\n  return {\n    \"p-tabview p-component\": true,\n    \"p-tabview-scrollable\": a1\n  };\n};\nlet idx = 0;\nclass TabPanel {\n  constructor(tabView, viewContainer, cd) {\n    this.viewContainer = viewContainer;\n    this.cd = cd;\n    this.cache = true;\n    this.tooltipPosition = 'top';\n    this.tooltipPositionStyle = 'absolute';\n    this.id = `p-tabpanel-${idx++}`;\n    this.tabView = tabView;\n  }\n  ngAfterContentInit() {\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'header':\n          this.headerTemplate = item.template;\n          break;\n        case 'content':\n          this.contentTemplate = item.template;\n          break;\n        case 'righticon':\n          this.rightIconTemplate = item.template;\n          break;\n        case 'lefticon':\n          this.leftIconTemplate = item.template;\n          break;\n        case 'closeicon':\n          this.closeIconTemplate = item.template;\n          break;\n        default:\n          this.contentTemplate = item.template;\n          break;\n      }\n    });\n  }\n  get selected() {\n    return this._selected;\n  }\n  set selected(val) {\n    this._selected = val;\n    if (!this.loaded) {\n      this.cd.detectChanges();\n    }\n    if (val) this.loaded = true;\n  }\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(disabled) {\n    this._disabled = disabled;\n    this.tabView.cd.markForCheck();\n  }\n  get header() {\n    return this._header;\n  }\n  set header(header) {\n    this._header = header;\n    // We have to wait for the rendering and then retrieve the actual size element from the DOM.\n    // in future `Promise.resolve` can be changed to `queueMicrotask` (if ie11 support will be dropped)\n    Promise.resolve().then(() => {\n      this.tabView.updateInkBar();\n      this.tabView.cd.markForCheck();\n    });\n  }\n  get leftIcon() {\n    return this._leftIcon;\n  }\n  set leftIcon(leftIcon) {\n    this._leftIcon = leftIcon;\n    this.tabView.cd.markForCheck();\n  }\n  get rightIcon() {\n    return this._rightIcon;\n  }\n  set rightIcon(rightIcon) {\n    this._rightIcon = rightIcon;\n    this.tabView.cd.markForCheck();\n  }\n  ngOnDestroy() {\n    this.view = null;\n  }\n}\nTabPanel.ɵfac = function TabPanel_Factory(t) {\n  return new (t || TabPanel)(i0.ɵɵdirectiveInject(forwardRef(() => TabView)), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nTabPanel.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TabPanel,\n  selectors: [[\"p-tabPanel\"]],\n  contentQueries: function TabPanel_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    closable: \"closable\",\n    headerStyle: \"headerStyle\",\n    headerStyleClass: \"headerStyleClass\",\n    cache: \"cache\",\n    tooltip: \"tooltip\",\n    tooltipPosition: \"tooltipPosition\",\n    tooltipPositionStyle: \"tooltipPositionStyle\",\n    tooltipStyleClass: \"tooltipStyleClass\",\n    selected: \"selected\",\n    disabled: \"disabled\",\n    header: \"header\",\n    leftIcon: \"leftIcon\",\n    rightIcon: \"rightIcon\"\n  },\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"p-tabview-panel\", \"role\", \"tabpanel\", 3, \"hidden\", 4, \"ngIf\"], [\"role\", \"tabpanel\", 1, \"p-tabview-panel\", 3, \"hidden\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\"]],\n  template: function TabPanel_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵtemplate(0, TabPanel_div_0_Template, 3, 5, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.closed);\n    }\n  },\n  dependencies: [i1.NgIf, i1.NgTemplateOutlet],\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TabPanel, [{\n    type: Component,\n    args: [{\n      selector: 'p-tabPanel',\n      template: `\n        <div [attr.id]=\"id\" class=\"p-tabview-panel\" [hidden]=\"!selected\" role=\"tabpanel\" [attr.aria-hidden]=\"!selected\" [attr.aria-labelledby]=\"id + '-label'\" *ngIf=\"!closed\">\n            <ng-content></ng-content>\n            <ng-container *ngIf=\"contentTemplate && (cache ? loaded : selected)\">\n                <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            </ng-container>\n        </div>\n    `,\n      host: {\n        class: 'p-element'\n      }\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(() => TabView)]\n      }]\n    }, {\n      type: i0.ViewContainerRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    closable: [{\n      type: Input\n    }],\n    headerStyle: [{\n      type: Input\n    }],\n    headerStyleClass: [{\n      type: Input\n    }],\n    cache: [{\n      type: Input\n    }],\n    tooltip: [{\n      type: Input\n    }],\n    tooltipPosition: [{\n      type: Input\n    }],\n    tooltipPositionStyle: [{\n      type: Input\n    }],\n    tooltipStyleClass: [{\n      type: Input\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    selected: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    header: [{\n      type: Input\n    }],\n    leftIcon: [{\n      type: Input\n    }],\n    rightIcon: [{\n      type: Input\n    }]\n  });\n})();\nclass TabView {\n  constructor(platformId, el, cd) {\n    this.platformId = platformId;\n    this.el = el;\n    this.cd = cd;\n    this.orientation = 'top';\n    this.onChange = new EventEmitter();\n    this.onClose = new EventEmitter();\n    this.activeIndexChange = new EventEmitter();\n    this.backwardIsDisabled = true;\n    this.forwardIsDisabled = false;\n  }\n  ngAfterContentInit() {\n    this.initTabs();\n    this.tabChangesSubscription = this.tabPanels.changes.subscribe(_ => {\n      this.initTabs();\n    });\n    this.templates.forEach(item => {\n      switch (item.getType()) {\n        case 'previousicon':\n          this.previousIconTemplate = item.template;\n          break;\n        case 'nexticon':\n          this.nextIconTemplate = item.template;\n          break;\n      }\n    });\n  }\n  ngAfterViewChecked() {\n    if (isPlatformBrowser(this.platformId)) {\n      if (this.tabChanged) {\n        this.updateInkBar();\n        this.tabChanged = false;\n      }\n    }\n  }\n  ngOnDestroy() {\n    if (this.tabChangesSubscription) {\n      this.tabChangesSubscription.unsubscribe();\n    }\n  }\n  initTabs() {\n    this.tabs = this.tabPanels.toArray();\n    let selectedTab = this.findSelectedTab();\n    if (!selectedTab && this.tabs.length) {\n      if (this.activeIndex != null && this.tabs.length > this.activeIndex) this.tabs[this.activeIndex].selected = true;else this.tabs[0].selected = true;\n      this.tabChanged = true;\n    }\n    this.cd.markForCheck();\n  }\n  open(event, tab) {\n    if (tab.disabled) {\n      if (event) {\n        event.preventDefault();\n      }\n      return;\n    }\n    if (!tab.selected) {\n      let selectedTab = this.findSelectedTab();\n      if (selectedTab) {\n        selectedTab.selected = false;\n      }\n      this.tabChanged = true;\n      tab.selected = true;\n      let selectedTabIndex = this.findTabIndex(tab);\n      this.preventActiveIndexPropagation = true;\n      this.activeIndexChange.emit(selectedTabIndex);\n      this.onChange.emit({\n        originalEvent: event,\n        index: selectedTabIndex\n      });\n      this.updateScrollBar(selectedTabIndex);\n    }\n    if (event) {\n      event.preventDefault();\n    }\n  }\n  close(event, tab) {\n    if (this.controlClose) {\n      this.onClose.emit({\n        originalEvent: event,\n        index: this.findTabIndex(tab),\n        close: () => {\n          this.closeTab(tab);\n        }\n      });\n    } else {\n      this.closeTab(tab);\n      this.onClose.emit({\n        originalEvent: event,\n        index: this.findTabIndex(tab)\n      });\n    }\n  }\n  closeTab(tab) {\n    if (tab.disabled) {\n      return;\n    }\n    if (tab.selected) {\n      this.tabChanged = true;\n      tab.selected = false;\n      for (let i = 0; i < this.tabs.length; i++) {\n        let tabPanel = this.tabs[i];\n        if (!tabPanel.closed && !tab.disabled) {\n          tabPanel.selected = true;\n          break;\n        }\n      }\n    }\n    tab.closed = true;\n  }\n  findSelectedTab() {\n    for (let i = 0; i < this.tabs.length; i++) {\n      if (this.tabs[i].selected) {\n        return this.tabs[i];\n      }\n    }\n    return null;\n  }\n  findTabIndex(tab) {\n    let index = -1;\n    for (let i = 0; i < this.tabs.length; i++) {\n      if (this.tabs[i] == tab) {\n        index = i;\n        break;\n      }\n    }\n    return index;\n  }\n  getBlockableElement() {\n    return this.el.nativeElement.children[0];\n  }\n  get activeIndex() {\n    return this._activeIndex;\n  }\n  set activeIndex(val) {\n    this._activeIndex = val;\n    if (this.preventActiveIndexPropagation) {\n      this.preventActiveIndexPropagation = false;\n      return;\n    }\n    if (this.tabs && this.tabs.length && this._activeIndex != null && this.tabs.length > this._activeIndex) {\n      this.findSelectedTab().selected = false;\n      this.tabs[this._activeIndex].selected = true;\n      this.tabChanged = true;\n      this.updateScrollBar(val);\n    }\n  }\n  updateInkBar() {\n    if (this.navbar) {\n      const tabHeader = DomHandler.findSingle(this.navbar.nativeElement, 'li.p-highlight');\n      if (!tabHeader) {\n        return;\n      }\n      this.inkbar.nativeElement.style.width = DomHandler.getWidth(tabHeader) + 'px';\n      this.inkbar.nativeElement.style.left = DomHandler.getOffset(tabHeader).left - DomHandler.getOffset(this.navbar.nativeElement).left + 'px';\n    }\n  }\n  updateScrollBar(index) {\n    let tabHeader = this.navbar.nativeElement.children[index];\n    tabHeader.scrollIntoView({\n      block: 'nearest'\n    });\n  }\n  updateButtonState() {\n    const content = this.content.nativeElement;\n    const {\n      scrollLeft,\n      scrollWidth\n    } = content;\n    const width = DomHandler.getWidth(content);\n    this.backwardIsDisabled = scrollLeft === 0;\n    this.forwardIsDisabled = parseInt(scrollLeft) === scrollWidth - width;\n  }\n  onScroll(event) {\n    this.scrollable && this.updateButtonState();\n    event.preventDefault();\n  }\n  getVisibleButtonWidths() {\n    return [this.prevBtn?.nativeElement, this.nextBtn?.nativeElement].reduce((acc, el) => el ? acc + DomHandler.getWidth(el) : acc, 0);\n  }\n  navBackward() {\n    const content = this.content.nativeElement;\n    const width = DomHandler.getWidth(content) - this.getVisibleButtonWidths();\n    const pos = content.scrollLeft - width;\n    content.scrollLeft = pos <= 0 ? 0 : pos;\n  }\n  navForward() {\n    const content = this.content.nativeElement;\n    const width = DomHandler.getWidth(content) - this.getVisibleButtonWidths();\n    const pos = content.scrollLeft + width;\n    const lastPos = content.scrollWidth - width;\n    content.scrollLeft = pos >= lastPos ? lastPos : pos;\n  }\n}\nTabView.ɵfac = function TabView_Factory(t) {\n  return new (t || TabView)(i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nTabView.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: TabView,\n  selectors: [[\"p-tabView\"]],\n  contentQueries: function TabView_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, TabPanel, 4);\n      i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.tabPanels = _t);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function TabView_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c1, 5);\n      i0.ɵɵviewQuery(_c2, 5);\n      i0.ɵɵviewQuery(_c3, 5);\n      i0.ɵɵviewQuery(_c4, 5);\n      i0.ɵɵviewQuery(_c5, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.navbar = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.prevBtn = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nextBtn = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inkbar = _t.first);\n    }\n  },\n  hostAttrs: [1, \"p-element\"],\n  inputs: {\n    orientation: \"orientation\",\n    style: \"style\",\n    styleClass: \"styleClass\",\n    controlClose: \"controlClose\",\n    scrollable: \"scrollable\",\n    activeIndex: \"activeIndex\"\n  },\n  outputs: {\n    onChange: \"onChange\",\n    onClose: \"onClose\",\n    activeIndexChange: \"activeIndexChange\"\n  },\n  ngContentSelectors: _c0,\n  decls: 13,\n  vars: 9,\n  consts: [[3, \"ngClass\", \"ngStyle\"], [1, \"p-tabview-nav-container\"], [\"class\", \"p-tabview-nav-prev p-tabview-nav-btn p-link\", \"type\", \"button\", \"pRipple\", \"\", 3, \"click\", 4, \"ngIf\"], [1, \"p-tabview-nav-content\", 3, \"scroll\"], [\"content\", \"\"], [\"role\", \"tablist\", 1, \"p-tabview-nav\"], [\"navbar\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"p-tabview-ink-bar\"], [\"inkbar\", \"\"], [\"class\", \"p-tabview-nav-next p-tabview-nav-btn p-link\", \"type\", \"button\", \"pRipple\", \"\", 3, \"click\", 4, \"ngIf\"], [1, \"p-tabview-panels\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-tabview-nav-prev\", \"p-tabview-nav-btn\", \"p-link\", 3, \"click\"], [\"prevBtn\", \"\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\"], [\"role\", \"presentation\", 3, \"ngClass\", \"ngStyle\", \"class\", 4, \"ngIf\"], [\"role\", \"presentation\", 3, \"ngClass\", \"ngStyle\"], [\"role\", \"tab\", \"pRipple\", \"\", 1, \"p-tabview-nav-link\", 3, \"pTooltip\", \"tooltipPosition\", \"positionStyle\", \"tooltipStyleClass\", \"click\", \"keydown.enter\"], [\"class\", \"p-tabview-left-icon\", 3, \"ngClass\", 4, \"ngIf\"], [\"class\", \"p-tabview-left-icon\", 4, \"ngIf\"], [1, \"p-tabview-title\"], [\"class\", \"p-tabview-right-icon\", 3, \"ngClass\", 4, \"ngIf\"], [\"class\", \"p-tabview-right-icon\", 4, \"ngIf\"], [1, \"p-tabview-left-icon\", 3, \"ngClass\"], [1, \"p-tabview-left-icon\"], [1, \"p-tabview-right-icon\", 3, \"ngClass\"], [1, \"p-tabview-right-icon\"], [3, \"styleClass\", \"click\", 4, \"ngIf\"], [\"class\", \"tab.closeIconTemplate\", 4, \"ngIf\"], [3, \"styleClass\", \"click\"], [1, \"tab.closeIconTemplate\"], [\"type\", \"button\", \"pRipple\", \"\", 1, \"p-tabview-nav-next\", \"p-tabview-nav-btn\", \"p-link\", 3, \"click\"], [\"nextBtn\", \"\"]],\n  template: function TabView_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, TabView_button_2_Template, 4, 2, \"button\", 2);\n      i0.ɵɵelementStart(3, \"div\", 3, 4);\n      i0.ɵɵlistener(\"scroll\", function TabView_Template_div_scroll_3_listener($event) {\n        return ctx.onScroll($event);\n      });\n      i0.ɵɵelementStart(5, \"ul\", 5, 6);\n      i0.ɵɵtemplate(7, TabView_ng_template_7_Template, 1, 1, \"ng-template\", 7);\n      i0.ɵɵelement(8, \"li\", 8, 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, TabView_button_10_Template, 4, 2, \"button\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 11);\n      i0.ɵɵprojection(12);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵclassMap(ctx.styleClass);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c7, ctx.scrollable))(\"ngStyle\", ctx.style);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.scrollable && !ctx.backwardIsDisabled);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.scrollable && !ctx.forwardIsDisabled);\n    }\n  },\n  dependencies: function () {\n    return [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i2.Tooltip, i3.Ripple, TimesIcon, ChevronLeftIcon, ChevronRightIcon];\n  },\n  styles: [\".p-tabview-nav-container{position:relative}.p-tabview-scrollable .p-tabview-nav-container{overflow:hidden}.p-tabview-nav-content{overflow-x:auto;overflow-y:hidden;scroll-behavior:smooth;scrollbar-width:none;overscroll-behavior:contain auto}.p-tabview-nav{display:flex;margin:0;padding:0;list-style-type:none;flex:1 1 auto}.p-tabview-nav-link{cursor:pointer;-webkit-user-select:none;user-select:none;display:flex;align-items:center;position:relative;text-decoration:none;overflow:hidden}.p-tabview-ink-bar{display:none;z-index:1}.p-tabview-nav-link:focus{z-index:1}.p-tabview-title{line-height:1;white-space:nowrap}.p-tabview-nav-btn{position:absolute;top:0;z-index:2;height:100%;display:flex;align-items:center;justify-content:center}.p-tabview-nav-prev{left:0}.p-tabview-nav-next{right:0}.p-tabview-nav-content::-webkit-scrollbar{display:none}.p-tabview-close{z-index:1}\\n\"],\n  encapsulation: 2,\n  changeDetection: 0\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TabView, [{\n    type: Component,\n    args: [{\n      selector: 'p-tabView',\n      template: `\n        <div [ngClass]=\"{ 'p-tabview p-component': true, 'p-tabview-scrollable': scrollable }\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-tabview-nav-container\">\n                <button *ngIf=\"scrollable && !backwardIsDisabled\" #prevBtn class=\"p-tabview-nav-prev p-tabview-nav-btn p-link\" (click)=\"navBackward()\" type=\"button\" pRipple>\n                    <ChevronLeftIcon *ngIf=\"!previousIconTemplate\"/>\n                    <ng-template *ngTemplateOutlet=\"previousIconTemplate\"></ng-template>\n                </button>\n                <div #content class=\"p-tabview-nav-content\" (scroll)=\"onScroll($event)\">\n                    <ul #navbar class=\"p-tabview-nav\" role=\"tablist\">\n                        <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n                            <li role=\"presentation\" [ngClass]=\"{ 'p-highlight': tab.selected, 'p-disabled': tab.disabled }\" [ngStyle]=\"tab.headerStyle\" [class]=\"tab.headerStyleClass\" *ngIf=\"!tab.closed\">\n                                <a\n                                    role=\"tab\"\n                                    class=\"p-tabview-nav-link\"\n                                    [attr.id]=\"tab.id + '-label'\"\n                                    [attr.aria-selected]=\"tab.selected\"\n                                    [attr.aria-controls]=\"tab.id\"\n                                    [pTooltip]=\"tab.tooltip\"\n                                    [tooltipPosition]=\"tab.tooltipPosition\"\n                                    [attr.aria-selected]=\"tab.selected\"\n                                    [positionStyle]=\"tab.tooltipPositionStyle\"\n                                    [tooltipStyleClass]=\"tab.tooltipStyleClass\"\n                                    (click)=\"open($event, tab)\"\n                                    (keydown.enter)=\"open($event, tab)\"\n                                    pRipple\n                                    [attr.tabindex]=\"tab.disabled ? null : '0'\"\n                                >\n                                    <ng-container *ngIf=\"!tab.headerTemplate\">\n                                        <span class=\"p-tabview-left-icon\" [ngClass]=\"tab.leftIcon\" *ngIf=\"tab.leftIcon && !tab.leftIconTemplate\"></span>\n                                        <span *ngIf=\"tab.leftIconTemplate\" class=\"p-tabview-left-icon\">\n                                            <ng-template *ngTemplateOutlet=\"tab.leftIconTemplate\"></ng-template>\n                                        </span>\n                                        <span class=\"p-tabview-title\">{{ tab.header }}</span>\n                                        <span class=\"p-tabview-right-icon\" [ngClass]=\"tab.rightIcon\" *ngIf=\"tab.rightIcon && !tab.rightIconTemplate\"></span>\n                                        <span *ngIf=\"tab.rightIconTemplate\" class=\"p-tabview-right-icon\">\n                                            <ng-template *ngTemplateOutlet=\"tab.rightIconTemplate\"></ng-template>\n                                        </span>\n                                    </ng-container>\n                                    <ng-container *ngTemplateOutlet=\"tab.headerTemplate\"></ng-container>\n                                    <ng-container *ngIf=\"tab.closable\">\n                                        <TimesIcon *ngIf=\"!tab.closeIconTemplate\" [styleClass]=\"'p-tabview-close'\" (click)=\"close($event, tab)\"/>\n                                        <span class=\"tab.closeIconTemplate\" *ngIf=\"p-tabview-close\"></span>\n                                        <ng-template *ngTemplateOutlet=\"tab.closeIconTemplate\"></ng-template>\n                                    </ng-container>\n                                </a>\n                            </li>\n                        </ng-template>\n                        <li #inkbar class=\"p-tabview-ink-bar\"></li>\n                    </ul>\n                </div>\n                <button *ngIf=\"scrollable && !forwardIsDisabled\" #nextBtn class=\"p-tabview-nav-next p-tabview-nav-btn p-link\" (click)=\"navForward()\" type=\"button\" pRipple>\n                    <ChevronRightIcon *ngIf=\"!nextIconTemplate\"/>\n                    <ng-template *ngTemplateOutlet=\"nextIconTemplate\"></ng-template>\n                </button>\n            </div>\n            <div class=\"p-tabview-panels\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        class: 'p-element'\n      },\n      styles: [\".p-tabview-nav-container{position:relative}.p-tabview-scrollable .p-tabview-nav-container{overflow:hidden}.p-tabview-nav-content{overflow-x:auto;overflow-y:hidden;scroll-behavior:smooth;scrollbar-width:none;overscroll-behavior:contain auto}.p-tabview-nav{display:flex;margin:0;padding:0;list-style-type:none;flex:1 1 auto}.p-tabview-nav-link{cursor:pointer;-webkit-user-select:none;user-select:none;display:flex;align-items:center;position:relative;text-decoration:none;overflow:hidden}.p-tabview-ink-bar{display:none;z-index:1}.p-tabview-nav-link:focus{z-index:1}.p-tabview-title{line-height:1;white-space:nowrap}.p-tabview-nav-btn{position:absolute;top:0;z-index:2;height:100%;display:flex;align-items:center;justify-content:center}.p-tabview-nav-prev{left:0}.p-tabview-nav-next{right:0}.p-tabview-nav-content::-webkit-scrollbar{display:none}.p-tabview-close{z-index:1}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    orientation: [{\n      type: Input\n    }],\n    style: [{\n      type: Input\n    }],\n    styleClass: [{\n      type: Input\n    }],\n    controlClose: [{\n      type: Input\n    }],\n    scrollable: [{\n      type: Input\n    }],\n    content: [{\n      type: ViewChild,\n      args: ['content']\n    }],\n    navbar: [{\n      type: ViewChild,\n      args: ['navbar']\n    }],\n    prevBtn: [{\n      type: ViewChild,\n      args: ['prevBtn']\n    }],\n    nextBtn: [{\n      type: ViewChild,\n      args: ['nextBtn']\n    }],\n    inkbar: [{\n      type: ViewChild,\n      args: ['inkbar']\n    }],\n    tabPanels: [{\n      type: ContentChildren,\n      args: [TabPanel]\n    }],\n    onChange: [{\n      type: Output\n    }],\n    onClose: [{\n      type: Output\n    }],\n    activeIndexChange: [{\n      type: Output\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [PrimeTemplate]\n    }],\n    activeIndex: [{\n      type: Input\n    }]\n  });\n})();\nclass TabViewModule {}\nTabViewModule.ɵfac = function TabViewModule_Factory(t) {\n  return new (t || TabViewModule)();\n};\nTabViewModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: TabViewModule\n});\nTabViewModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, SharedModule, TooltipModule, RippleModule, TimesIcon, ChevronLeftIcon, ChevronRightIcon, SharedModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TabViewModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, SharedModule, TooltipModule, RippleModule, TimesIcon, ChevronLeftIcon, ChevronRightIcon],\n      exports: [TabView, TabPanel, SharedModule],\n      declarations: [TabView, TabPanel]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TabPanel, TabView, TabViewModule };\n//# sourceMappingURL=primeng-tabview.mjs.map","map":{"version":3,"names":["i0","forwardRef","Component","Inject","Input","ContentChildren","EventEmitter","PLATFORM_ID","ChangeDetectionStrategy","ViewEncapsulation","ViewChild","Output","NgModule","i1","isPlatformBrowser","CommonModule","i2","TooltipModule","i3","RippleModule","PrimeTemplate","SharedModule","DomHandler","TimesIcon","ChevronRightIcon","ChevronLeftIcon","idx","TabPanel","constructor","tabView","viewContainer","cd","cache","tooltipPosition","tooltipPositionStyle","id","ngAfterContentInit","templates","forEach","item","getType","headerTemplate","template","contentTemplate","rightIconTemplate","leftIconTemplate","closeIconTemplate","selected","_selected","val","loaded","detectChanges","disabled","_disabled","markForCheck","header","_header","Promise","resolve","then","updateInkBar","leftIcon","_leftIcon","rightIcon","_rightIcon","ngOnDestroy","view","ɵfac","TabView","ViewContainerRef","ChangeDetectorRef","ɵcmp","NgIf","NgTemplateOutlet","type","args","selector","host","class","undefined","decorators","closable","headerStyle","headerStyleClass","tooltip","tooltipStyleClass","platformId","el","orientation","onChange","onClose","activeIndexChange","backwardIsDisabled","forwardIsDisabled","initTabs","tabChangesSubscription","tabPanels","changes","subscribe","_","previousIconTemplate","nextIconTemplate","ngAfterViewChecked","tabChanged","unsubscribe","tabs","toArray","selectedTab","findSelectedTab","length","activeIndex","open","event","tab","preventDefault","selectedTabIndex","findTabIndex","preventActiveIndexPropagation","emit","originalEvent","index","updateScrollBar","close","controlClose","closeTab","i","tabPanel","closed","getBlockableElement","nativeElement","children","_activeIndex","navbar","tabHeader","findSingle","inkbar","style","width","getWidth","left","getOffset","scrollIntoView","block","updateButtonState","content","scrollLeft","scrollWidth","parseInt","onScroll","scrollable","getVisibleButtonWidths","prevBtn","nextBtn","reduce","acc","navBackward","pos","navForward","lastPos","ElementRef","NgClass","NgForOf","NgStyle","Tooltip","Ripple","changeDetection","OnPush","encapsulation","None","styles","styleClass","TabViewModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["/Users/jeremiahnavarro/Documents/GitHub/health-tracker-v2/root/frontend/node_modules/primeng/fesm2020/primeng-tabview.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { forwardRef, Component, Inject, Input, ContentChildren, EventEmitter, PLATFORM_ID, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i2 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nimport * as i3 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { TimesIcon } from 'primeng/icons/times';\nimport { ChevronRightIcon } from 'primeng/icons/chevronright';\nimport { ChevronLeftIcon } from 'primeng/icons/chevronleft';\n\nlet idx = 0;\nclass TabPanel {\n    constructor(tabView, viewContainer, cd) {\n        this.viewContainer = viewContainer;\n        this.cd = cd;\n        this.cache = true;\n        this.tooltipPosition = 'top';\n        this.tooltipPositionStyle = 'absolute';\n        this.id = `p-tabpanel-${idx++}`;\n        this.tabView = tabView;\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                    break;\n                case 'content':\n                    this.contentTemplate = item.template;\n                    break;\n                case 'righticon':\n                    this.rightIconTemplate = item.template;\n                    break;\n                case 'lefticon':\n                    this.leftIconTemplate = item.template;\n                    break;\n                case 'closeicon':\n                    this.closeIconTemplate = item.template;\n                    break;\n                default:\n                    this.contentTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    get selected() {\n        return this._selected;\n    }\n    set selected(val) {\n        this._selected = val;\n        if (!this.loaded) {\n            this.cd.detectChanges();\n        }\n        if (val)\n            this.loaded = true;\n    }\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(disabled) {\n        this._disabled = disabled;\n        this.tabView.cd.markForCheck();\n    }\n    get header() {\n        return this._header;\n    }\n    set header(header) {\n        this._header = header;\n        // We have to wait for the rendering and then retrieve the actual size element from the DOM.\n        // in future `Promise.resolve` can be changed to `queueMicrotask` (if ie11 support will be dropped)\n        Promise.resolve().then(() => {\n            this.tabView.updateInkBar();\n            this.tabView.cd.markForCheck();\n        });\n    }\n    get leftIcon() {\n        return this._leftIcon;\n    }\n    set leftIcon(leftIcon) {\n        this._leftIcon = leftIcon;\n        this.tabView.cd.markForCheck();\n    }\n    get rightIcon() {\n        return this._rightIcon;\n    }\n    set rightIcon(rightIcon) {\n        this._rightIcon = rightIcon;\n        this.tabView.cd.markForCheck();\n    }\n    ngOnDestroy() {\n        this.view = null;\n    }\n}\nTabPanel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: TabPanel, deps: [{ token: forwardRef(() => TabView) }, { token: i0.ViewContainerRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTabPanel.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.4\", type: TabPanel, selector: \"p-tabPanel\", inputs: { closable: \"closable\", headerStyle: \"headerStyle\", headerStyleClass: \"headerStyleClass\", cache: \"cache\", tooltip: \"tooltip\", tooltipPosition: \"tooltipPosition\", tooltipPositionStyle: \"tooltipPositionStyle\", tooltipStyleClass: \"tooltipStyleClass\", selected: \"selected\", disabled: \"disabled\", header: \"header\", leftIcon: \"leftIcon\", rightIcon: \"rightIcon\" }, host: { classAttribute: \"p-element\" }, queries: [{ propertyName: \"templates\", predicate: PrimeTemplate }], ngImport: i0, template: `\n        <div [attr.id]=\"id\" class=\"p-tabview-panel\" [hidden]=\"!selected\" role=\"tabpanel\" [attr.aria-hidden]=\"!selected\" [attr.aria-labelledby]=\"id + '-label'\" *ngIf=\"!closed\">\n            <ng-content></ng-content>\n            <ng-container *ngIf=\"contentTemplate && (cache ? loaded : selected)\">\n                <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            </ng-container>\n        </div>\n    `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: TabPanel, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'p-tabPanel',\n                    template: `\n        <div [attr.id]=\"id\" class=\"p-tabview-panel\" [hidden]=\"!selected\" role=\"tabpanel\" [attr.aria-hidden]=\"!selected\" [attr.aria-labelledby]=\"id + '-label'\" *ngIf=\"!closed\">\n            <ng-content></ng-content>\n            <ng-container *ngIf=\"contentTemplate && (cache ? loaded : selected)\">\n                <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n            </ng-container>\n        </div>\n    `,\n                    host: {\n                        class: 'p-element'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [forwardRef(() => TabView)]\n                }] }, { type: i0.ViewContainerRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { closable: [{\n                type: Input\n            }], headerStyle: [{\n                type: Input\n            }], headerStyleClass: [{\n                type: Input\n            }], cache: [{\n                type: Input\n            }], tooltip: [{\n                type: Input\n            }], tooltipPosition: [{\n                type: Input\n            }], tooltipPositionStyle: [{\n                type: Input\n            }], tooltipStyleClass: [{\n                type: Input\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], selected: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], header: [{\n                type: Input\n            }], leftIcon: [{\n                type: Input\n            }], rightIcon: [{\n                type: Input\n            }] } });\nclass TabView {\n    constructor(platformId, el, cd) {\n        this.platformId = platformId;\n        this.el = el;\n        this.cd = cd;\n        this.orientation = 'top';\n        this.onChange = new EventEmitter();\n        this.onClose = new EventEmitter();\n        this.activeIndexChange = new EventEmitter();\n        this.backwardIsDisabled = true;\n        this.forwardIsDisabled = false;\n    }\n    ngAfterContentInit() {\n        this.initTabs();\n        this.tabChangesSubscription = this.tabPanels.changes.subscribe((_) => {\n            this.initTabs();\n        });\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'previousicon':\n                    this.previousIconTemplate = item.template;\n                    break;\n                case 'nexticon':\n                    this.nextIconTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    ngAfterViewChecked() {\n        if (isPlatformBrowser(this.platformId)) {\n            if (this.tabChanged) {\n                this.updateInkBar();\n                this.tabChanged = false;\n            }\n        }\n    }\n    ngOnDestroy() {\n        if (this.tabChangesSubscription) {\n            this.tabChangesSubscription.unsubscribe();\n        }\n    }\n    initTabs() {\n        this.tabs = this.tabPanels.toArray();\n        let selectedTab = this.findSelectedTab();\n        if (!selectedTab && this.tabs.length) {\n            if (this.activeIndex != null && this.tabs.length > this.activeIndex)\n                this.tabs[this.activeIndex].selected = true;\n            else\n                this.tabs[0].selected = true;\n            this.tabChanged = true;\n        }\n        this.cd.markForCheck();\n    }\n    open(event, tab) {\n        if (tab.disabled) {\n            if (event) {\n                event.preventDefault();\n            }\n            return;\n        }\n        if (!tab.selected) {\n            let selectedTab = this.findSelectedTab();\n            if (selectedTab) {\n                selectedTab.selected = false;\n            }\n            this.tabChanged = true;\n            tab.selected = true;\n            let selectedTabIndex = this.findTabIndex(tab);\n            this.preventActiveIndexPropagation = true;\n            this.activeIndexChange.emit(selectedTabIndex);\n            this.onChange.emit({ originalEvent: event, index: selectedTabIndex });\n            this.updateScrollBar(selectedTabIndex);\n        }\n        if (event) {\n            event.preventDefault();\n        }\n    }\n    close(event, tab) {\n        if (this.controlClose) {\n            this.onClose.emit({\n                originalEvent: event,\n                index: this.findTabIndex(tab),\n                close: () => {\n                    this.closeTab(tab);\n                }\n            });\n        }\n        else {\n            this.closeTab(tab);\n            this.onClose.emit({\n                originalEvent: event,\n                index: this.findTabIndex(tab)\n            });\n        }\n    }\n    closeTab(tab) {\n        if (tab.disabled) {\n            return;\n        }\n        if (tab.selected) {\n            this.tabChanged = true;\n            tab.selected = false;\n            for (let i = 0; i < this.tabs.length; i++) {\n                let tabPanel = this.tabs[i];\n                if (!tabPanel.closed && !tab.disabled) {\n                    tabPanel.selected = true;\n                    break;\n                }\n            }\n        }\n        tab.closed = true;\n    }\n    findSelectedTab() {\n        for (let i = 0; i < this.tabs.length; i++) {\n            if (this.tabs[i].selected) {\n                return this.tabs[i];\n            }\n        }\n        return null;\n    }\n    findTabIndex(tab) {\n        let index = -1;\n        for (let i = 0; i < this.tabs.length; i++) {\n            if (this.tabs[i] == tab) {\n                index = i;\n                break;\n            }\n        }\n        return index;\n    }\n    getBlockableElement() {\n        return this.el.nativeElement.children[0];\n    }\n    get activeIndex() {\n        return this._activeIndex;\n    }\n    set activeIndex(val) {\n        this._activeIndex = val;\n        if (this.preventActiveIndexPropagation) {\n            this.preventActiveIndexPropagation = false;\n            return;\n        }\n        if (this.tabs && this.tabs.length && this._activeIndex != null && this.tabs.length > this._activeIndex) {\n            this.findSelectedTab().selected = false;\n            this.tabs[this._activeIndex].selected = true;\n            this.tabChanged = true;\n            this.updateScrollBar(val);\n        }\n    }\n    updateInkBar() {\n        if (this.navbar) {\n            const tabHeader = DomHandler.findSingle(this.navbar.nativeElement, 'li.p-highlight');\n            if (!tabHeader) {\n                return;\n            }\n            this.inkbar.nativeElement.style.width = DomHandler.getWidth(tabHeader) + 'px';\n            this.inkbar.nativeElement.style.left = DomHandler.getOffset(tabHeader).left - DomHandler.getOffset(this.navbar.nativeElement).left + 'px';\n        }\n    }\n    updateScrollBar(index) {\n        let tabHeader = this.navbar.nativeElement.children[index];\n        tabHeader.scrollIntoView({ block: 'nearest' });\n    }\n    updateButtonState() {\n        const content = this.content.nativeElement;\n        const { scrollLeft, scrollWidth } = content;\n        const width = DomHandler.getWidth(content);\n        this.backwardIsDisabled = scrollLeft === 0;\n        this.forwardIsDisabled = parseInt(scrollLeft) === scrollWidth - width;\n    }\n    onScroll(event) {\n        this.scrollable && this.updateButtonState();\n        event.preventDefault();\n    }\n    getVisibleButtonWidths() {\n        return [this.prevBtn?.nativeElement, this.nextBtn?.nativeElement].reduce((acc, el) => (el ? acc + DomHandler.getWidth(el) : acc), 0);\n    }\n    navBackward() {\n        const content = this.content.nativeElement;\n        const width = DomHandler.getWidth(content) - this.getVisibleButtonWidths();\n        const pos = content.scrollLeft - width;\n        content.scrollLeft = pos <= 0 ? 0 : pos;\n    }\n    navForward() {\n        const content = this.content.nativeElement;\n        const width = DomHandler.getWidth(content) - this.getVisibleButtonWidths();\n        const pos = content.scrollLeft + width;\n        const lastPos = content.scrollWidth - width;\n        content.scrollLeft = pos >= lastPos ? lastPos : pos;\n    }\n}\nTabView.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: TabView, deps: [{ token: PLATFORM_ID }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });\nTabView.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.4\", type: TabView, selector: \"p-tabView\", inputs: { orientation: \"orientation\", style: \"style\", styleClass: \"styleClass\", controlClose: \"controlClose\", scrollable: \"scrollable\", activeIndex: \"activeIndex\" }, outputs: { onChange: \"onChange\", onClose: \"onClose\", activeIndexChange: \"activeIndexChange\" }, host: { classAttribute: \"p-element\" }, queries: [{ propertyName: \"tabPanels\", predicate: TabPanel }, { propertyName: \"templates\", predicate: PrimeTemplate }], viewQueries: [{ propertyName: \"content\", first: true, predicate: [\"content\"], descendants: true }, { propertyName: \"navbar\", first: true, predicate: [\"navbar\"], descendants: true }, { propertyName: \"prevBtn\", first: true, predicate: [\"prevBtn\"], descendants: true }, { propertyName: \"nextBtn\", first: true, predicate: [\"nextBtn\"], descendants: true }, { propertyName: \"inkbar\", first: true, predicate: [\"inkbar\"], descendants: true }], ngImport: i0, template: `\n        <div [ngClass]=\"{ 'p-tabview p-component': true, 'p-tabview-scrollable': scrollable }\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-tabview-nav-container\">\n                <button *ngIf=\"scrollable && !backwardIsDisabled\" #prevBtn class=\"p-tabview-nav-prev p-tabview-nav-btn p-link\" (click)=\"navBackward()\" type=\"button\" pRipple>\n                    <ChevronLeftIcon *ngIf=\"!previousIconTemplate\"/>\n                    <ng-template *ngTemplateOutlet=\"previousIconTemplate\"></ng-template>\n                </button>\n                <div #content class=\"p-tabview-nav-content\" (scroll)=\"onScroll($event)\">\n                    <ul #navbar class=\"p-tabview-nav\" role=\"tablist\">\n                        <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n                            <li role=\"presentation\" [ngClass]=\"{ 'p-highlight': tab.selected, 'p-disabled': tab.disabled }\" [ngStyle]=\"tab.headerStyle\" [class]=\"tab.headerStyleClass\" *ngIf=\"!tab.closed\">\n                                <a\n                                    role=\"tab\"\n                                    class=\"p-tabview-nav-link\"\n                                    [attr.id]=\"tab.id + '-label'\"\n                                    [attr.aria-selected]=\"tab.selected\"\n                                    [attr.aria-controls]=\"tab.id\"\n                                    [pTooltip]=\"tab.tooltip\"\n                                    [tooltipPosition]=\"tab.tooltipPosition\"\n                                    [attr.aria-selected]=\"tab.selected\"\n                                    [positionStyle]=\"tab.tooltipPositionStyle\"\n                                    [tooltipStyleClass]=\"tab.tooltipStyleClass\"\n                                    (click)=\"open($event, tab)\"\n                                    (keydown.enter)=\"open($event, tab)\"\n                                    pRipple\n                                    [attr.tabindex]=\"tab.disabled ? null : '0'\"\n                                >\n                                    <ng-container *ngIf=\"!tab.headerTemplate\">\n                                        <span class=\"p-tabview-left-icon\" [ngClass]=\"tab.leftIcon\" *ngIf=\"tab.leftIcon && !tab.leftIconTemplate\"></span>\n                                        <span *ngIf=\"tab.leftIconTemplate\" class=\"p-tabview-left-icon\">\n                                            <ng-template *ngTemplateOutlet=\"tab.leftIconTemplate\"></ng-template>\n                                        </span>\n                                        <span class=\"p-tabview-title\">{{ tab.header }}</span>\n                                        <span class=\"p-tabview-right-icon\" [ngClass]=\"tab.rightIcon\" *ngIf=\"tab.rightIcon && !tab.rightIconTemplate\"></span>\n                                        <span *ngIf=\"tab.rightIconTemplate\" class=\"p-tabview-right-icon\">\n                                            <ng-template *ngTemplateOutlet=\"tab.rightIconTemplate\"></ng-template>\n                                        </span>\n                                    </ng-container>\n                                    <ng-container *ngTemplateOutlet=\"tab.headerTemplate\"></ng-container>\n                                    <ng-container *ngIf=\"tab.closable\">\n                                        <TimesIcon *ngIf=\"!tab.closeIconTemplate\" [styleClass]=\"'p-tabview-close'\" (click)=\"close($event, tab)\"/>\n                                        <span class=\"tab.closeIconTemplate\" *ngIf=\"p-tabview-close\"></span>\n                                        <ng-template *ngTemplateOutlet=\"tab.closeIconTemplate\"></ng-template>\n                                    </ng-container>\n                                </a>\n                            </li>\n                        </ng-template>\n                        <li #inkbar class=\"p-tabview-ink-bar\"></li>\n                    </ul>\n                </div>\n                <button *ngIf=\"scrollable && !forwardIsDisabled\" #nextBtn class=\"p-tabview-nav-next p-tabview-nav-btn p-link\" (click)=\"navForward()\" type=\"button\" pRipple>\n                    <ChevronRightIcon *ngIf=\"!nextIconTemplate\"/>\n                    <ng-template *ngTemplateOutlet=\"nextIconTemplate\"></ng-template>\n                </button>\n            </div>\n            <div class=\"p-tabview-panels\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `, isInline: true, styles: [\".p-tabview-nav-container{position:relative}.p-tabview-scrollable .p-tabview-nav-container{overflow:hidden}.p-tabview-nav-content{overflow-x:auto;overflow-y:hidden;scroll-behavior:smooth;scrollbar-width:none;overscroll-behavior:contain auto}.p-tabview-nav{display:flex;margin:0;padding:0;list-style-type:none;flex:1 1 auto}.p-tabview-nav-link{cursor:pointer;-webkit-user-select:none;user-select:none;display:flex;align-items:center;position:relative;text-decoration:none;overflow:hidden}.p-tabview-ink-bar{display:none;z-index:1}.p-tabview-nav-link:focus{z-index:1}.p-tabview-title{line-height:1;white-space:nowrap}.p-tabview-nav-btn{position:absolute;top:0;z-index:2;height:100%;display:flex;align-items:center;justify-content:center}.p-tabview-nav-prev{left:0}.p-tabview-nav-next{right:0}.p-tabview-nav-content::-webkit-scrollbar{display:none}.p-tabview-close{z-index:1}\\n\"], dependencies: [{ kind: \"directive\", type: i0.forwardRef(function () { return i1.NgClass; }), selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgForOf; }), selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgIf; }), selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgTemplateOutlet; }), selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i1.NgStyle; }), selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i2.Tooltip; }), selector: \"[pTooltip]\", inputs: [\"tooltipPosition\", \"tooltipEvent\", \"appendTo\", \"positionStyle\", \"tooltipStyleClass\", \"tooltipZIndex\", \"escape\", \"showDelay\", \"hideDelay\", \"life\", \"positionTop\", \"positionLeft\", \"autoHide\", \"fitContent\", \"hideOnEscape\", \"pTooltip\", \"tooltipDisabled\", \"tooltipOptions\"] }, { kind: \"directive\", type: i0.forwardRef(function () { return i3.Ripple; }), selector: \"[pRipple]\" }, { kind: \"component\", type: i0.forwardRef(function () { return TimesIcon; }), selector: \"TimesIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return ChevronLeftIcon; }), selector: \"ChevronLeftIcon\" }, { kind: \"component\", type: i0.forwardRef(function () { return ChevronRightIcon; }), selector: \"ChevronRightIcon\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: TabView, decorators: [{\n            type: Component,\n            args: [{ selector: 'p-tabView', template: `\n        <div [ngClass]=\"{ 'p-tabview p-component': true, 'p-tabview-scrollable': scrollable }\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <div class=\"p-tabview-nav-container\">\n                <button *ngIf=\"scrollable && !backwardIsDisabled\" #prevBtn class=\"p-tabview-nav-prev p-tabview-nav-btn p-link\" (click)=\"navBackward()\" type=\"button\" pRipple>\n                    <ChevronLeftIcon *ngIf=\"!previousIconTemplate\"/>\n                    <ng-template *ngTemplateOutlet=\"previousIconTemplate\"></ng-template>\n                </button>\n                <div #content class=\"p-tabview-nav-content\" (scroll)=\"onScroll($event)\">\n                    <ul #navbar class=\"p-tabview-nav\" role=\"tablist\">\n                        <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n                            <li role=\"presentation\" [ngClass]=\"{ 'p-highlight': tab.selected, 'p-disabled': tab.disabled }\" [ngStyle]=\"tab.headerStyle\" [class]=\"tab.headerStyleClass\" *ngIf=\"!tab.closed\">\n                                <a\n                                    role=\"tab\"\n                                    class=\"p-tabview-nav-link\"\n                                    [attr.id]=\"tab.id + '-label'\"\n                                    [attr.aria-selected]=\"tab.selected\"\n                                    [attr.aria-controls]=\"tab.id\"\n                                    [pTooltip]=\"tab.tooltip\"\n                                    [tooltipPosition]=\"tab.tooltipPosition\"\n                                    [attr.aria-selected]=\"tab.selected\"\n                                    [positionStyle]=\"tab.tooltipPositionStyle\"\n                                    [tooltipStyleClass]=\"tab.tooltipStyleClass\"\n                                    (click)=\"open($event, tab)\"\n                                    (keydown.enter)=\"open($event, tab)\"\n                                    pRipple\n                                    [attr.tabindex]=\"tab.disabled ? null : '0'\"\n                                >\n                                    <ng-container *ngIf=\"!tab.headerTemplate\">\n                                        <span class=\"p-tabview-left-icon\" [ngClass]=\"tab.leftIcon\" *ngIf=\"tab.leftIcon && !tab.leftIconTemplate\"></span>\n                                        <span *ngIf=\"tab.leftIconTemplate\" class=\"p-tabview-left-icon\">\n                                            <ng-template *ngTemplateOutlet=\"tab.leftIconTemplate\"></ng-template>\n                                        </span>\n                                        <span class=\"p-tabview-title\">{{ tab.header }}</span>\n                                        <span class=\"p-tabview-right-icon\" [ngClass]=\"tab.rightIcon\" *ngIf=\"tab.rightIcon && !tab.rightIconTemplate\"></span>\n                                        <span *ngIf=\"tab.rightIconTemplate\" class=\"p-tabview-right-icon\">\n                                            <ng-template *ngTemplateOutlet=\"tab.rightIconTemplate\"></ng-template>\n                                        </span>\n                                    </ng-container>\n                                    <ng-container *ngTemplateOutlet=\"tab.headerTemplate\"></ng-container>\n                                    <ng-container *ngIf=\"tab.closable\">\n                                        <TimesIcon *ngIf=\"!tab.closeIconTemplate\" [styleClass]=\"'p-tabview-close'\" (click)=\"close($event, tab)\"/>\n                                        <span class=\"tab.closeIconTemplate\" *ngIf=\"p-tabview-close\"></span>\n                                        <ng-template *ngTemplateOutlet=\"tab.closeIconTemplate\"></ng-template>\n                                    </ng-container>\n                                </a>\n                            </li>\n                        </ng-template>\n                        <li #inkbar class=\"p-tabview-ink-bar\"></li>\n                    </ul>\n                </div>\n                <button *ngIf=\"scrollable && !forwardIsDisabled\" #nextBtn class=\"p-tabview-nav-next p-tabview-nav-btn p-link\" (click)=\"navForward()\" type=\"button\" pRipple>\n                    <ChevronRightIcon *ngIf=\"!nextIconTemplate\"/>\n                    <ng-template *ngTemplateOutlet=\"nextIconTemplate\"></ng-template>\n                </button>\n            </div>\n            <div class=\"p-tabview-panels\">\n                <ng-content></ng-content>\n            </div>\n        </div>\n    `, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, host: {\n                        class: 'p-element'\n                    }, styles: [\".p-tabview-nav-container{position:relative}.p-tabview-scrollable .p-tabview-nav-container{overflow:hidden}.p-tabview-nav-content{overflow-x:auto;overflow-y:hidden;scroll-behavior:smooth;scrollbar-width:none;overscroll-behavior:contain auto}.p-tabview-nav{display:flex;margin:0;padding:0;list-style-type:none;flex:1 1 auto}.p-tabview-nav-link{cursor:pointer;-webkit-user-select:none;user-select:none;display:flex;align-items:center;position:relative;text-decoration:none;overflow:hidden}.p-tabview-ink-bar{display:none;z-index:1}.p-tabview-nav-link:focus{z-index:1}.p-tabview-title{line-height:1;white-space:nowrap}.p-tabview-nav-btn{position:absolute;top:0;z-index:2;height:100%;display:flex;align-items:center;justify-content:center}.p-tabview-nav-prev{left:0}.p-tabview-nav-next{right:0}.p-tabview-nav-content::-webkit-scrollbar{display:none}.p-tabview-close{z-index:1}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { orientation: [{\n                type: Input\n            }], style: [{\n                type: Input\n            }], styleClass: [{\n                type: Input\n            }], controlClose: [{\n                type: Input\n            }], scrollable: [{\n                type: Input\n            }], content: [{\n                type: ViewChild,\n                args: ['content']\n            }], navbar: [{\n                type: ViewChild,\n                args: ['navbar']\n            }], prevBtn: [{\n                type: ViewChild,\n                args: ['prevBtn']\n            }], nextBtn: [{\n                type: ViewChild,\n                args: ['nextBtn']\n            }], inkbar: [{\n                type: ViewChild,\n                args: ['inkbar']\n            }], tabPanels: [{\n                type: ContentChildren,\n                args: [TabPanel]\n            }], onChange: [{\n                type: Output\n            }], onClose: [{\n                type: Output\n            }], activeIndexChange: [{\n                type: Output\n            }], templates: [{\n                type: ContentChildren,\n                args: [PrimeTemplate]\n            }], activeIndex: [{\n                type: Input\n            }] } });\nclass TabViewModule {\n}\nTabViewModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: TabViewModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTabViewModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.4\", ngImport: i0, type: TabViewModule, declarations: [TabView, TabPanel], imports: [CommonModule, SharedModule, TooltipModule, RippleModule, TimesIcon, ChevronLeftIcon, ChevronRightIcon], exports: [TabView, TabPanel, SharedModule] });\nTabViewModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: TabViewModule, imports: [CommonModule, SharedModule, TooltipModule, RippleModule, TimesIcon, ChevronLeftIcon, ChevronRightIcon, SharedModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: TabViewModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, SharedModule, TooltipModule, RippleModule, TimesIcon, ChevronLeftIcon, ChevronRightIcon],\n                    exports: [TabView, TabPanel, SharedModule],\n                    declarations: [TabView, TabPanel]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TabPanel, TabView, TabViewModule };\n//# sourceMappingURL=primeng-tabview.mjs.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}